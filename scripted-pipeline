pipeline {
   agent any
   stages {
   //Declare a global variable for mvnHome


   	stage('Version') { 
            steps{
 		echo "Version"
	  //build job: 'version-check'
          }
   	}

   	stage('Environment') {
            steps{
               echo "environment-check"
       		// build job: 'environment-check'
          }
   	} 

   	stage('Document') {
           steps{
                writeFile file: 'build.xml', text: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<build-metadata>\n<groupId>com.emc.dpsg.ecdm.installer</groupId>\n<artifactId>dellemc-ppdm-sw</artifactId>\n<version>19.6.0-1-SNAPSHOT-879</version>\n<scmUrl>scm:git:ssh://gitdpsg.lss.emc.com/ecdm/ecdm.git/installer/dellemc-ppdm-sw/../..</scmUrl>\n<scmTag>HEAD</scmTag>\n<scmRevision>ba90790f62efa8e999bdb67fac9014d9d7d86478</scmRevision>\n<dependency>\n    <groupId>com.emc.dpsg.ecdm.ui</groupId>\n    <artifactId>brs-ui</artifactId>\n    <version>19.6.0-1-SNAPSHOT-263</version>\n    <scmUrl>scm:git:ssh://gitdpsg.lss.emc.com/ecdm/ecdm-ui-ng.git/brs-ui</scmUrl>\n    <scmTag>HEAD</scmTag>\n    <scmRevision>9e2d0634bc64b572ada0299139c28091befa76d0</scmRevision>\n</dependency>\n<dependency>\n    <groupId>com.emc.dpsg.vproxy.k8s</groupId>\n    <artifactId>docker-controller</artifactId>\n    <version>19.6.0-1-SNAPSHOT</version>\n    <scmUrl>scm:git:ssh://gitdpsg.lss.emc.com/vproxy/vproxy-kubernetes.git/docker/docker-controller/../..</scmUrl>\n    <scmTag>HEAD</scmTag>\n    <scmRevision>a7fa6f5af36a1aafa65671d4c1fc18e5922bc9a6</scmRevision>\n</dependency>\n<dependency>\n    <groupId>com.emc.dpsg.search.install</groupId>\n    <artifactId>search-vmdk</artifactId>\n    <version>19.6.0-1-SNAPSHOT</version>\n    <scmUrl>scm:git:ssh://gitdpsg.lss.emc.com/vproxy/search.git/search-install/search-vmdk/../..</scmUrl>\n    <scmTag>HEAD</scmTag>\n    <scmRevision>a7dcc602c62a4a74a1a2c71fc43198df47a8ce98</scmRevision>\n</dependency>\n<dependency>\n    <groupId>com.emc.dpd</groupId>\n    <artifactId>appagent</artifactId>\n    <version>19.6-1-SNAPSHOT-6</version>\n    <scmUrl>scm:git://gitdpsg.lss.emc.com/ecdm/thirdparty.git/emc/appagent</scmUrl>\n    <scmTag>HEAD</scmTag>\n    <scmRevision>1110</scmRevision>\n</dependency>\n<dependency>\n    <groupId>com.emc.dpsg.vproxy</groupId>\n    <artifactId>vproxy-vmdk</artifactId>\n    <version>19.6.0-1-SNAPSHOT-68</version>\n    <scmUrl>scm:p4:ssl:p4brsb.lss.emc.com:1666://VT/vproxy/main/vproxy-ova/vproxy-vmdk/../..</scmUrl>\n    <scmTag>HEAD</scmTag>\n    <scmRevision>862983</scmRevision>\n</dependency>\n</build-metadata>\n'
                //sh 'ls -l build.xml'
                //sh 'cat build.xml'
          }
	 	 //build job: 'document-roshambo', parameters: [booleanParam(name: 'generate_javadoc', value: false), stringParam(name: 'javadoc_location', value: 'C:\\_javadoc00')]

   	}

   	stage('Compile'){
             steps{
               echo "compile-roshambo"
          }
       	// build job: 'compile-roshambo'
   	}
   
   	stage('Acceptance') {
            steps{
               echo "Acceptance"
          }
         	//def response = input message: 'UAT Tests',   parameters: [choice(choices: 'Pass\nFail', description: 'Proceed or Abort?', name: 'Pass or Fail?')]

   	}
   
   	stage('Conclusion') {
	     steps{
              echo "Coclusioon"

             }
     	// def response = input message: 'Whatcha think?', parameters: [choice(choices: 'Yes\nNo', description: 'Proceed or Abort?', name: 'Wasn\'t that cool?')]
        
     	// if (response=="Yes") {
     	//    echo "I agree!"
     	// } else {
     	//    echo "You are hard to please."
     	//
     	// }
    }
   }
   post{
        always{
             echo "Hello"
	     sleep(5)
             //deleteDir()
         }
    }
}
